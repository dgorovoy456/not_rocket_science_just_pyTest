# 1. Create project
# 2. Create repo
# 3. Creat initial commit
# 4. Push the commit
# 5. Greate .gitignore
# 6. Install pytest - pip install pytest
# 7. SAMPLE COMMANDS
#     pytest
#     pytest -v                                       - verbose
#     pytest -v test_one.py
#     pytest --tb=no                                  - turn off tracebacks
#     pytest --tb=no test_one.py test_two.py
#     pytest --tb=no tests/
#     pytest -vv test_card_fail.py - supper verbose
#     pytest -v test_classes.py::TestEquality
#     pytest test_classes.py::TestEquality::test_equality -v
#     pytest -v -k TestEquality
#     pytest -v -k TestEquali
#     pytest -v -k "TestEquality and not diff_ids"
#     pytest -v --tb=no -k "(dict or ids) and not TestEquality"
#     pip list --not-required - to see top level packages
#     pytest --setup-show test_count - show order of operations of tests and fixtures
#     pytest --fixtures - to check which and where fixtures are defined
#     pytest --fixtures-per-test test_count.py::test_empty - the same for each test
#     pytest -s test_autouse.py to see print("Some") messages in output
#     pytest --basetemp=mydir - to specify temp base dir
#     pytest -v -ra test_skip.py - to report reason for a different test results, 'a' means all except passed
#     pytest -v -m 'smoke or exception' test_start.py - to run tests with custom marks 'smoke' or 'exception'
#     pytest -v -m "(exception or smoke) and (not finish)"




# 8. Create venv python -m virtualenv > source venv/bin/activate > deactivate